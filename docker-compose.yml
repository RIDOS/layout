---

networks:
  shared_network:
    name: shared_network

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    networks:
      - shared_network

  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: 'login'
      POSTGRES_PASSWORD: 'pass'
      POSTGRES_DB: 'db-name'
    ports:
      - '5432:5432'
    networks:
      - shared_network

  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - '6379:6379'
    networks:
      - shared_network

  redis-ui:
    container_name: redis-ui
    image: rediscommander/redis-commander
    ports:
      - '8081:8081'
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
    networks:
      - shared_network

  kafka:
    image: bitnami/kafka:3.9
    ports:
      - '9092:9092'
      - '9094:9094'
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: 'controller,broker'
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: '0@kafka:9093'
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_CFG_LISTENERS: 'PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094'
      KAFKA_CFG_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094'
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
    networks:
      - shared_network

  kafka-init:
    image: bitnami/kafka:3.9
    command: |
      kafka-topics.sh --create --bootstrap-server kafka:9092 --topic apple-topic
    depends_on:
      - kafka
    networks:
      - shared_network

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - '8383:8383'
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - SERVER_PORT=8383
    depends_on:
      - kafka
    links:
      - kafka
    networks:
      - shared_network
